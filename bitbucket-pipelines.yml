image: "node:22-slim"
definitions:
  artifactory-pipe: &artifactory-pipe
    pipe: atlassian/artifactory-sidekick:v1
  artifactory-init: &artifactory-init source .artifactory/activate.sh
  sonar-pipe: &sonar-pipe
    - pipe: docker://docker.atl-paas.net/sox/mobuild/sonar-pipe:stable
      variables:
        DEFAULT_BRANCH: "main"
  steps:
    - step: &test
        name: Test
        caches:
          - node
        script:
          - *artifactory-pipe
          - *artifactory-init
          - npm install
          - npm run test
          - <<: *sonar-pipe
    - step: &build
        name: Build
        caches:
          - node
        script:
          - *artifactory-pipe
          - *artifactory-init
          - npm install
          - npm run build

    - step: &release
        name: Tag Release
        caches:
          - node
        deployment: production
        clone:
          depth: full
        script:
          - *artifactory-pipe
          - *artifactory-init
          - apt-get update && apt-get install -y git
          - export BB_REPO=git@bitbucket.org:atlassian/artifact-publish-token.git GITHUB_REPO=git@github.com:atlassian-labs/artifact-publish-token.git
          - git remote set-url origin $BB_REPO
          - mv ~/.ssh/config ~/.ssh/config-bak
          - (mkdir -p ~/.ssh ; umask  077 ; echo ${SECART_BOT_SSH_KEY} | base64 --decode > ~/.ssh/id_rsa)
          - npm install
          - export CUR_VERSION=v1.0.1
          - npm run release
          - mv ~/.ssh/config-bak ~/.ssh/config
          - ( git show -s --format=%D HEAD | grep $CUR_VERSION ) && git push -d $GITHUB_REPO $CUR_VERSION -v $DRY_RUN || echo true
          - git push $GITHUB_REPO HEAD:main --follow-tags -v $DRY_RUN
pipelines:
  default:
    - parallel:
        - step: *test
        - step: *build
  branches:
    main:
      - parallel:
          - step: *test
          - step: *build
      - step: *release
